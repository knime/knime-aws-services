<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./ddbputitem.png" type="Other"
    xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>DynamoDB Put Item</name>
    <shortDescription>
        Puts items into DynamoDB using condition expressions.
    </shortDescription>

    <fullDescription>
        <intro>
            This node allows conditionally inserting items into DynamoDB using
            <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html">Condition Expression</a>.
            If no condition is necessary, consider using the DynamoDB Batch Put node, as it handles multiple successive put operations more efficiently.
        </intro>
        <option name="Static credentials">
            If checked, credentials can be entered in the node dialog, otherwise the AWS default credentials provider chain is used,
            which looks for credentials in this order:
        <ul>
        <li>
            Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY, or AWS_ACCESS_KEY and AWS_SECRET_KEY
        </li>
        <li>
            Java System Properties - aws.accessKeyId and aws.secretKey
        </li>
        <li>
            Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI
        </li>
        <li>
            Credentials delivered through the Amazon EC2 container service
            if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" environment variable is set
            and security manager has permission to access the variable,
        </li>
        <li>
            Instance profile credentials delivered through the Amazon EC2 metadata service
        </li>
        </ul>
        </option>
        <option name="Access Key">The access key for access to the AWS infrastructure.</option>
        <option name="Secret Key">The secret key for access to the AWS infrastructure.</option>
        <option name="Region">The region the table is in.</option>
        <option name="Table Name">The table to access.</option>
        <option name="Custom Endpoint" optional="true">A custom endpoint if the default AWS endpoint should not be used, e.g. for DynamoDB Local.</option>
        <option name="Condition Expression" optional="true">An expression specifying which items to update.
            See the <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html">
            AWS Documentation</a> for further information.</option>
        <option name="Return Values">Which values to return in the output table. Choosing any other value than None may result in consumption of additional read capacity units.</option>
        <option name="Name Mapping">Mapping from placeholder to attribute name for the condition and update expressions. Placeholders for attribute names must start with a hash (#).</option>
        <option name="Value Mapping">Mapping from placeholder to value for the condition and update expressions. Value placeholders must start with a colon (:). If the type is list, set, or map,
        the value must be given as JSON as specified in the <a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_AttributeValue.html">AWS Documentation</a>.
        If COLUMN is selected as type, the value is retrieved from a table column and inserted into the expression. 
        </option>
        <option name="Publish consumed capacity units as flow variable">If checked, the total number of consumed read and write capacity units is published as flow variable.</option>
    </fullDescription>

    <ports>
        <inPort index="0" name="Amazon Credentials">Credentials for an AWS account</inPort>
        <inPort index="1" name="Data table">Table with items to put</inPort>
        <outPort index="0" name="Amazon Credentials">Credentials for an AWS account</outPort>
        <outPort index="1" name="Put results">If return value is ALL_OLD, overwritten items are returned in this table</outPort>
    </ports>
</knimeNode>


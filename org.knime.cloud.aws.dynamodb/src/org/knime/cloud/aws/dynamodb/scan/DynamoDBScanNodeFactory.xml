<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./ddbscan.png" type="Source"
    xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>DynamoDB Scan</name>
    <shortDescription>
        Retrieves data from DynamoDB by performing a scan operation over the whole table.
    </shortDescription>

    <fullDescription>
        <intro>
            This node performs a scan over a DynamoDB table, returning a KNIME table with all the items
            not filtered out by the filter expression.
            Important: the columns and their types of the KNIME output table are determined from the
            first batch of items retrieved from DynamoDB. One batch has a maximum size of 1MB. If an item
            in a later batch, i.e. after loading 1MB, has an attribute that did not occur before, this attribute
            is not written to the output table.
        </intro>
        <tab name="Standard Settings">
            <option name="Static credentials">
                If checked, credentials can be entered in the node dialog, otherwise the AWS default credentials provider chain is used,
                which looks for credentials in this order:
            <ul>
            <li>
                Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY, or AWS_ACCESS_KEY and AWS_SECRET_KEY
            </li>
            <li>
                Java System Properties - aws.accessKeyId and aws.secretKey
            </li>
            <li>
                Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI
            </li>
            <li>
                Credentials delivered through the Amazon EC2 container service
                if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" environment variable is set
                and security manager has permission to access the variable,
            </li>
            <li>
                Instance profile credentials delivered through the Amazon EC2 metadata service
            </li>
            </ul>
            </option>
            <option name="Access Key">The access key for access to the AWS infrastructure.</option>
            <option name="Secret Key">The secret key for access to the AWS infrastructure.</option>
            <option name="Region">The region the table is in.</option>
            <option name="Table Name">The table to access.</option>
            <option name="Custom Endpoint" optional="true">A custom endpoint if the default AWS endpoint should not be used, e.g. for DynamoDB Local.</option>
            <option name="Index name" optional="true">The name of the index to use or empty if no index should be scanned.</option>
            <option name="Consistent Read">Whether consistent read should be enforced (costs twice the throughput capacity units).</option>
            <option name="Limit">The maximum number of items to retrieve.</option>
            <option name="Publish consumed capacity units as flow variable">
            If checked, the total capacity units used by the operation are published as a flow variable named &quot;queryConsumedCapacity&quot;.</option>
        </tab>
        <tab name="Filter &amp; Projection">
            <option name="Filter">
                A filter expression (see <a href="https://docs.aws.amazon.com/de_de/amazondynamodb/latest/developerguide/Query.html#Query.FilterExpression">the DynamoDB documentation</a>)
            </option>
            <option name="Projection">
                The attributes to load from DynamoDB.
            </option>
            <option name="Name Mapping">
                Mapping for name placeholders in the filter and projection expressions. Necessary if the attribute names are reserved keywords.
            </option>
            <option name="Value Mapping">
                Mapping for value placeholders in the filter and projection expressions.
            </option>
        </tab>
    </fullDescription>

    <ports>
        <inPort index="0" name="Amazon Credentials">Credentials for an AWS account</inPort>
        <outPort index="0" name="Amazon Credentials">Credentials for an AWS account</outPort>
        <outPort index="1" name="Scan results">KNIME data table</outPort>
    </ports>
</knimeNode>

